{"version":3,"sources":["components/ScoringTask/scoring.module.css","Resources/search.svg","components/CreatingTask/creating-task.module.css","components/Header/Header.js","components/CreatingTask/CreatingTask.js","data/jsonData.js","components/ScoringTask/Card.js","components/ScoringTask/ScoringTask.js","App.js","index.js","components/Header/header.module.css","components/ScoringTask/card.module.css"],"names":["module","exports","Header","useState","isMenuOpen","setIsMenuOpen","isMobileDevice","setIsMobileDevice","closeMenuBar","changeMenuVersion","window","innerWidth","useEffect","addEventListener","removeEventListener","className","style","container","menubar","onClick","nav","exact","to","activeClassName","selected","links","CreatingTask","imageUrl","setImageUrl","taskId","description","taskData","setTaskData","updateTaskDetails","e","target","name","value","welcome_title","role","aria-label","type","id","onChange","preventDefault","data","URL","createObjectURL","files","hidden","upload","colOne","instruction_upload","src","alt","image","htmlFor","upload_button","size","icon","colTwo","instruction_fill","text","label","placeholder","required","input","rows","storeData","JSON","stringify","localStorage","setItem","alert","btn","jsonData","editedBy","imgUrl","score","Card","imageData","updateTaskScore","map","card","key","details","rating","slider","min","max","step","ScoringTask","getItem","parse","setImageData","setTaskId","search","isNaN","filteredData","filter","item","filterData","images","length","empty","updatedData","App","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9faca3b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"scoring_container__1tMbt\",\"search\":\"scoring_search__3edMm\",\"empty\":\"scoring_empty__38Svb\",\"images\":\"scoring_images__NjJ84\"};","module.exports = __webpack_public_path__ + \"static/media/search.de3fa3be.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"creating-task_container__3I9X4\",\"welcome_title\":\"creating-task_welcome_title__1pDyv\",\"hidden\":\"creating-task_hidden__tM6Sm\",\"upload\":\"creating-task_upload__1C41D\",\"colOne\":\"creating-task_colOne__34KGx\",\"instruction_upload\":\"creating-task_instruction_upload__2Mxyw\",\"instruction_fill\":\"creating-task_instruction_fill__38MoX\",\"image\":\"creating-task_image__3l9xI\",\"upload_button\":\"creating-task_upload_button__2fAge\",\"icon\":\"creating-task_icon__2nd4g\",\"colTwo\":\"creating-task_colTwo__6rXeU\",\"text\":\"creating-task_text__1M0T4\",\"label\":\"creating-task_label__33Lc5\",\"input\":\"creating-task_input__Uof3E\",\"btn\":\"creating-task_btn__2td1H\"};","import React, { useState, useEffect } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { FiMenu } from \"react-icons/fi\";\nimport style from \"./header.module.css\";\n\nconst Header = () => {\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [isMobileDevice, setIsMobileDevice] = useState(true);\n\n  const openMenuBar = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  const closeMenuBar = () => {\n    if (isMobileDevice === true) {\n      setIsMenuOpen(!isMenuOpen);\n    }\n  };\n\n  // Function to check whether to display mobile menu version or not\n  const changeMenuVersion = () => {\n    if (window.innerWidth >= 750) {\n      // For larger device\n      setIsMenuOpen(true);\n      setIsMobileDevice(false);\n    } else if (window.innerWidth <= 750) {\n      // For smaller device\n      setIsMenuOpen(false);\n      setIsMobileDevice(true);\n    }\n  };\n\n  /* Listening for width changes so that changeMenuVersion is fired to change\n     between mobile and desktop menu version.\n  */\n  useEffect(() => {\n    window.addEventListener(\"load\", changeMenuVersion);\n    window.addEventListener(\"resize\", changeMenuVersion);\n    return () => {\n      window.removeEventListener(\"load\", changeMenuVersion);\n      window.removeEventListener(\"resize\", changeMenuVersion);\n    };\n  });\n\n  return (\n    <header className={style.container}>\n      <FiMenu className={style.menubar} onClick={openMenuBar} />\n      {isMenuOpen && (\n        <nav className={style.nav}>\n          <NavLink exact to=\"/\" activeClassName={style.selected} className={style.links}>\n            <span onClick={closeMenuBar}>Create a task</span>\n          </NavLink>\n          <NavLink to=\"score-task\" activeClassName={style.selected} className={style.links}>\n            <span onClick={closeMenuBar}>Score tasks</span>\n          </NavLink>\n        </nav>\n      )}\n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\nimport { MdCloudUpload } from \"react-icons/md\";\nimport style from \"./creating-task.module.css\";\n\nconst CreatingTask = () => {\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [taskData, setTaskData] = useState({\n    taskId: \"\",\n    description: \"\",\n  });\n\n  // creates url from the uploaded file and stored in imageUrl\n  const uploadImageFile = (e) => {\n    e.preventDefault();\n    const data = URL.createObjectURL(e.target.files[0]);\n    setImageUrl(data);\n  };\n\n  const updateTaskDetails = (e) => {\n    setTaskData({ ...taskData, [e.target.name]: e.target.value });\n  };\n\n  const saveTaskDetails = () => {\n    // validation for submit button\n    if (taskData.taskId === \"\" && taskData.description === \"\") {\n      // checking for empty input field values\n      alert(\"Please fill the details\");\n      return;\n    } else if (imageUrl === \"\") {\n      // checking for empty image file\n      alert(\"Please upload an image\");\n      return;\n    }\n    // new task is saved in local storage\n    const storeData = JSON.stringify({ ...taskData, imageUrl });\n    localStorage.setItem(\"task\", storeData);\n    // resetting the input fields\n    setImageUrl(\"\");\n    setTaskData({\n      taskId: \"\",\n      description: \"\",\n    });\n    alert(\"Task Submitted\");\n  };\n\n  const { taskId, description } = taskData;\n\n  return (\n    <section className={style.container}>\n      <h1 className={style.welcome_title}>\n        <span role=\"img\" aria-label=\"emoji\">\n          👋\n        </span>{\" \"}\n        Welcome\n      </h1>\n      {/* Default Input File is hidden */}\n      <input type=\"file\" id=\"file\" onChange={uploadImageFile} className={style.hidden} />\n      <div className={style.upload}>\n        <div className={style.colOne}>\n          <h2 className={style.instruction_upload}>1. Get started by uploading a image</h2>\n          {imageUrl ? (\n            <img src={imageUrl} alt=\"editing\" className={style.image} />\n          ) : (\n            <h1 className={style.image}>No Image Selected</h1>\n          )}\n          {/* Label to select the hidden file input tag */}\n          <label htmlFor=\"file\" className={style.upload_button}>\n            <MdCloudUpload size=\"3rem\" className={style.icon} />\n          </label>\n        </div>\n        <div className={style.colTwo}>\n          <h2 className={style.instruction_fill}>2. Fill out some details</h2>\n          <div className={style.text}>\n            <label className={style.label}>Task Id</label>\n            <input\n              type=\"number\"\n              name=\"taskId\"\n              value={taskId}\n              placeholder=\"Enter the task Id\"\n              required\n              onChange={updateTaskDetails}\n              className={style.input}\n            />\n          </div>\n          <div className={style.text}>\n            <label className={style.label}>Editing Details</label>\n            <textarea\n              type=\"textarea\"\n              name=\"description\"\n              value={description}\n              placeholder=\"Enter some details for editing\"\n              rows=\"6\"\n              required\n              onChange={updateTaskDetails}\n              className={style.input}\n            />\n          </div>\n          <button onClick={saveTaskDetails} className={style.btn}>\n            Submit\n          </button>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default CreatingTask;\n","export const jsonData = [\n  {\n    id: 1,\n    taskId: 132,\n    editedBy: \"Sam\",\n    imgUrl: \"https://raw.githubusercontent.com/kishoreio/image-editing-bootcamp/master/src/Resources/water.jpg\",\n    score: \"0\",\n  },\n  {\n    id: 2,\n    taskId: 132,\n    editedBy: \"James\",\n    imgUrl: \"https://raw.githubusercontent.com/kishoreio/image-editing-bootcamp/master/src/Resources/water.jpg\",\n    score: \"0\",\n  },\n  {\n    id: 3,\n    taskId: 132,\n    editedBy: \"Harper\",\n    imgUrl: \"https://raw.githubusercontent.com/kishoreio/image-editing-bootcamp/master/src/Resources/water.jpg\",\n    score: \"0\",\n  },\n  {\n    id: 4,\n    taskId: 132,\n    editedBy: \"Evelyn\",\n    imgUrl: \"https://raw.githubusercontent.com/kishoreio/image-editing-bootcamp/master/src/Resources/water.jpg\",\n    score: \"0\",\n  },\n  {\n    id: 5,\n    taskId: 132,\n    editedBy: \"Jackson\",\n    imgUrl: \"https://raw.githubusercontent.com/kishoreio/image-editing-bootcamp/master/src/Resources/water.jpg\",\n    score: \"0\",\n  },\n];\n","import React from \"react\";\nimport style from \"./card.module.css\";\n\nconst Card = ({ imageData, updateTaskScore }) => {\n  return imageData.map((data) => {\n    return (\n      <div className={style.card} key={data.id}>\n        <img src={data.imgUrl} alt=\"a logo\" className={style.image} />\n        <div className={style.details}>\n          <p>Task Id: {data.taskId}</p>\n          <p>Edited By: {data.editedBy}</p>\n        </div>\n        <div className={style.rating}>\n          <div className={style.slider}>\n            <span>Move the slider to rate the image</span>\n            <input\n              type=\"range\"\n              min=\"1\"\n              max=\"10\"\n              step=\"1\"\n              value={data.score}\n              onChange={(e) => updateTaskScore(e, data.id)}\n            />\n          </div>\n          <p className={style.score}>{data.score}</p>\n        </div>\n      </div>\n    );\n  });\n};\n\nexport default Card;\n","import React, { useState } from \"react\";\nimport { jsonData } from \"../../data/jsonData\";\nimport Card from \"./Card\";\nimport style from \"./scoring.module.css\";\nimport search from \"../../Resources/search.svg\";\n\nconst ScoringTask = () => {\n  let data = null;\n  // checking for data stored in local storage\n  if (localStorage.getItem(\"scoreData\") !== null) {\n    // if present assigned to data variable\n    data = JSON.parse(localStorage.getItem(\"scoreData\"));\n  } else {\n    // otherwise default data is used i.e imported json data\n    data = jsonData;\n  }\n\n  const [imageData, setImageData] = useState(\"\");\n  const [taskId, setTaskId] = useState(\"\");\n\n  //  Filters data based on task id given on search box\n  const filterData = (id) => {\n    if (id === \"\" || isNaN(id)) {\n      alert(\"Invalid Id. Check Again\");\n      return;\n    }\n    const filteredData = data.filter((item) => {\n      return +item.taskId === +id;\n    });\n    // filtered data is updated and displayed.\n    setImageData(filteredData);\n  };\n\n  const updateTaskScore = (e, id) => {\n    const updatedData = imageData.map((data) => {\n      if (data.id === id) {\n        return { ...data, score: e.target.value };\n      }\n      return data;\n    });\n    // updated task score is stored in local storage\n    localStorage.setItem(\"scoreData\", JSON.stringify(updatedData));\n    setImageData(updatedData);\n  };\n\n  return (\n    <section className={style.container}>\n      <div className={style.search}>\n        <input\n          type=\"number\"\n          placeholder=\"Enter a task id to display images\"\n          value={taskId}\n          onChange={(e) => setTaskId(e.target.value)}\n        />\n        <button type=\"button\" onClick={() => filterData(taskId)}>\n          Click\n        </button>\n      </div>\n      <div className={style.images}>\n        {imageData.length === 0 ? (\n          <div className={style.empty}>\n            <img src={search} alt=\"search\" />\n            <h2>No results, Please enter a task id</h2>\n          </div>\n        ) : (\n          <Card imageData={imageData} updateTaskScore={updateTaskScore} />\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default ScoringTask;\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./components/Header/Header\";\nimport CreatingTask from \"./components/CreatingTask/CreatingTask\";\nimport ScoringTask from \"./components/ScoringTask/ScoringTask\";\n\nfunction App() {\n  return (\n    <>\n      <Router>\n        <Header />\n        <Route exact path=\"/\" component={CreatingTask} />\n        <Route exact path=\"/score-task\" component={ScoringTask} />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"header_container__3hoMn\",\"menubar\":\"header_menubar__2YPrb\",\"nav\":\"header_nav__2v8dK\",\"links\":\"header_links__2851x\",\"selected\":\"header_selected__2nPft\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"card_card__3eLNG\",\"image\":\"card_image__1kFxa\",\"rating\":\"card_rating__3bWH7\",\"slider\":\"card_slider__1tBxW\",\"details\":\"card_details__32TI2\",\"score\":\"card_score__Pni8U\"};"],"sourceRoot":""}